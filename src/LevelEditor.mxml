<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:components="components.*"
			   width="1019" height="988" minWidth="955" minHeight="600"
			  >
	<fx:Script>
		<![CDATA[
            import logic.commands.DeleteRoom;
			import com.adobe.serialization.json.JSON;
			
			import config.Config;
			
			import events.ObjectUrlChanged;
			import events.OperationTypeChanged;
			import events.RoomColorChanged;
			
			import logic.UndoRedo;
			
			import model.BoardViewModel;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.URLUtil;
			
			import valueObject.Room;
			
			import view.BoardView;
			[Bindable]
			private var backpackArray_ : Array = null;
			//private var boardView:BoardView;
			private var remoteObj:RemoteObject = null;
			private var boardView:BoardView;
			public var selectedLevel:int;
			public function getSelectedLevel():int
			{
				return selectedLevel;
			}
			public function init(selectedLevel:int):void
			{
				this.selectedLevel = selectedLevel;
			//	boardView = new BoardView(0,0,new BoardViewModel()); // BoardViewModel constructor has reasonable default
			//	stage.addChild(boardView);
            //    boardView.addEventListener(MouseEvent.DOUBLE_CLICK,boardDoubleClicked);
			//	boardView.setOperationType(0);
				//roomCreator.initApp();
                board.initBoard();
				roomCreator.initApp(this.selectedLevel);
				
               // stage.addChild(board.boardView);
                board.addEventListener(MouseEvent.DOUBLE_CLICK,boardDoubleClicked);
				
			}
			
            protected function boardDoubleClicked(event:MouseEvent):void
            {
                textArea.text += "\n board double clicked\n";
                // TODO: we could initilize change to room view here if it is gonna be done in other compontent
                // if not, then this handler is rather useless.
            }

			protected function roomCreator_roomColorChangedHandler(event:RoomColorChanged):void
			{
				board.setCurrentColor(event.color);
                board.setCurrentRoomId(event.roomId);
			}
	//		protected function roomCreator_roomUrlChangedHandler(event:ObjectUrlChanged):void
	//		{
	//			boardView.setUrl(event.url);
	//		}
			
	//		protected function mapToJSON_handler(event:MouseEvent):void
	//		{
    //            textArea.text = com.adobe.serialization.json.JSON.encode(boardView.boardViewModel);
	//		}
            
            protected function undo(event:MouseEvent):void
            {
                UndoRedo.getInstance().undo();
                
            }
            
            protected function redo(event:MouseEvent):void
            {
                UndoRedo.getInstance().redo();
                
            }

            protected function roomCreator_deleteRoomEvtHandler(event:Event):void
            {
                var cmd:DeleteRoom = new DeleteRoom(board, roomCreator);
                UndoRedo.getInstance().execute(cmd);
            }
            
        ]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
	</fx:Declarations>

	<!--<components:RoomCreator id="roomCreator" x="609" y="10" roomColorChanged="roomCreator_roomColorChangedHandler(event)" objectUrlChanged="roomCreator_roomUrlChangedHandler(event)"/>-->
    <components:RoomCreator id="roomCreator" x="609" y="10" roomColorChanged="roomCreator_roomColorChangedHandler(event)" deleteRoomEvt="roomCreator_deleteRoomEvtHandler(event)"/>
	<!--<s:Button x="396" y="742" label="Map to JSON" click="mapToJSON_handler(event)"/>-->
	<s:TextArea id="textArea" x="10" y="547" width="378" height="220" text="{toolbar.tool}"/>
    <s:Button x="32" y="504" label="Undo" click="undo(event)"/>
    <s:Button x="140" y="504" label="Redo" click="redo(event)"/>
    <components:Toolbar id="toolbar" x="32" y="475">
    </components:Toolbar>
	<components:Board id="board" x="10" y="10" width="572" height="444" defaultBlockLength="30"
                      tool="{toolbar.tool}"/>
</s:Group>


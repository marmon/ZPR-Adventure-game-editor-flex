<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="444">
	
	<!-- Properties of the parent ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	
	
	<!-- Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	<fx:Metadata>
		[Event(name="roomColorChanged", type="events.RoomColorChanged")]
		[Event(name="objectUrlChanged", type="events.ObjectUrlChanged")]
		[Event(name="operationTypeChanged", type="events.OperationTypeChanged")]
	</fx:Metadata>
	
	<!-- Styles ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	
	
	<!-- Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import events.ObjectUrlChanged;
			import events.OperationTypeChanged;
			import events.RoomColorChanged;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			
			import spark.events.IndexChangeEvent;
			
			import valueObject.GameObject;
			import valueObject.Room;
			
			[Bindable]
			public var room:Room;
			[Bindable]
			public var color:uint;
			
			protected var rooms:ArrayCollection = new ArrayCollection();
			protected var objects:ArrayCollection = new ArrayCollection();
			protected function init(event:FlexEvent):void
			{
				importObjects();
			}
			public function initApp():void
			{
				importObjects();
			}
			private function importObjects():void
			{
				if(objects.length != 0)
					return;
				var gObj:GameObject = new GameObject();
				gObj.name = "obj1";
				gObj.url = "images/herb.png";
				objects.addItem(gObj);
				var gObj2:GameObject = new GameObject();
				gObj2.name = "obj2";
				gObj2.url = "images/h.png";
				objects.addItem(gObj2);
			}
			protected function submitButton_clickHandler(event:MouseEvent):void
			{
				var r:Room = new Room();
				r.name = roomName.text;
				r.color = roomColor.selectedColor;
				for each(var room:Room in rooms)
				{
					if((room as Room).color == roomColor.selectedColor)
					{
						Alert.show("Color must be unique!");
						return;
					}
					if((room as Room).name == roomName.text)
					{
						Alert.show("Name must be unique!");
						return;
					}
				}
				rooms.addItem(r);
			}
			protected function objectList_changeHandles(event:IndexChangeEvent): void
			{
				list.selectedIndex = -1;
				var eventObject:ObjectUrlChanged = new ObjectUrlChanged("objectUrlChanged", (objectsList.selectedItem as GameObject).url);
				dispatchEvent(eventObject);
				var operationEvent:OperationTypeChanged = new OperationTypeChanged("operationTypeChanged", 1);
				dispatchEvent(operationEvent);
				
			}
			protected function list_changeHandler(event:IndexChangeEvent):void
			{
				objectsList.selectedIndex = -1;
				room = (list.selectedItem as Room);
				color = room.color;
				
				var eventObject:RoomColorChanged = new RoomColorChanged("roomColorChanged", room.color); 
				dispatchEvent(eventObject);
				var operationEvent:OperationTypeChanged = new OperationTypeChanged("operationTypeChanged", 0);
				dispatchEvent(operationEvent);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Label text="Rooms"/>
	<s:List id="list" width="100%" change="list_changeHandler(event)" dataProvider="{rooms}" labelField="name">
	</s:List>
	<s:Group width="100%" height="194">
		<s:layout>
			<s:HorizontalLayout/>

		</s:layout>
			<s:Label text="Name:"/>
			<s:TextInput id="roomName"/>
			<s:Label text="Color:"/>
			<mx:ColorPicker id="roomColor"/>

			<s:Button id="submitButton" label="Add room" click="submitButton_clickHandler(event)" enabled="{roomName.text}"/>
	</s:Group>
	<s:Label text="Objects"/>
	<s:List id="objectsList" width="100%" change="objectList_changeHandles(event)" dataProvider="{objects}" labelField="name">
		
	</s:List>
	<s:Form width="100%" height="65">
		<s:FormItem label="Room name:">
		</s:FormItem>
		<s:FormItem label="Color:">
		</s:FormItem>
		
		<s:FormItem>
		</s:FormItem>
	</s:Form>
	<s:Spacer width="100%" height="50"/>
	<s:Group width="100%" height="194">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		
		<!-- Binding of ColorPicker below somehow do not work. Probably I am binding it to wrong property -->
		<mx:ColorPicker id="roomColor2" x="12" y="14" selectedColor="{(list.selectedItem as Room).color}"/>
		
		<!--Example of binding. Text and its color are bound to selected room from the list-->
		<s:TextInput id="roomName2" x="10" y="49" text="{list.selectedItem.name}" color="{(list.selectedItem as Room).color}"/>
	</s:Group>
	
	
</s:Group>
